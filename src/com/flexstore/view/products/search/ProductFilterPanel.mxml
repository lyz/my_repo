<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
// Copyright (C) 2003-2006 Adobe Macromedia Software LLC and its licensors.
// All Rights Reserved.
// The following is Sample Code and is subject to all restrictions on such code
// as contained in the End User License Agreement accompanying this product.
// If you have received this file from a source other than Adobe,
// then your use, modification, or distribution of it requires
// the prior written permission of Adobe.
//
////////////////////////////////////////////////////////////////////////////////
-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"     
    xmlns="com.flexstore.view.products.search.*"
    height="100%" 
    paddingLeft="4" 
    paddingRight="12" 
    paddingTop="12" 
    paddingBottom="8" 
    verticalGap="0"
    currentState="showingThumbnails">
    
    <mx:Metadata>
       [Event(name="filter", type="com.flexstore.view.products.search.ProductFilterEvent")] 
       [Event("compare")]
    </mx:Metadata>
    
    <mx:Script>
        <![CDATA[
        import mx.controls.sliderClasses.Slider;
        import mx.controls.Alert; 
        
    	import com.flexstore.view.products.cart.ProductListEvent;
    	import com.flexstore.model.ModelLocator;
    	import com.flexstore.model.OrderCart;
    	import com.flexstore.view.products.cart.ProductListItem;
        import com.flexstore.view.products.search.ProductFilterEvent;
           
        private var thumbBeingPressed:Boolean;
           
        private function dispatchFilter():void
        {
            dispatchEvent(new ProductFilterEvent(filter, thumbBeingPressed));
            currentState = "showingThumbnails";
        }
        
        private function sliderValue(values:Array, index:int):Number
        {
            return values[index];
        }
        
        private function onChangeCart(event:ProductListEvent):void
        {
            switch (event.type)
            {
                case ProductListEvent.PRODUCT_ADD		:   __compareCart.addItem(event.product);							
                											break;
                											
                case ProductListEvent.PRODUCT_REMOVE	: 	__compareCart.removeItem(event.product);						
												            break;                				
            }

			if (currentState == "showingComparison") {
	            if (__compareCart.products.length == 0)		dispatchFilter();
	            else										onCompareRequested();
	        }
        }        
        
        private function onCompareRequested():void
        {
            if (__compareCart.products.length > 0)
            {
                dispatchEvent(new Event("compare"));
                currentState = "showingComparison";
            }
            else
            {
                Alert.show("There are no items to compare.", "Compare");
            }
        }
        
        	[Bindable] private var __compareCart : OrderCart = ModelLocator.getInstance().compareCart;
        ]]>
    </mx:Script>
    
    <mx:states>
       <mx:State name="showingThumbnails">
          <mx:SetProperty target="{compareButton}" name="label" value="Compare Items" />
          <mx:SetStyle target="{compareButton}" name="icon" value="@Embed('/assets/icon_compare.png')" />
          <mx:SetEventHandler target="{compareButton}" name="click" handler="onCompareRequested()" />
       </mx:State>
       <mx:State name="showingComparison">
           <mx:SetProperty target="{compareButton}" name="label" value="Back to thumbnail view" />
           <mx:SetStyle target="{compareButton}" name="icon" value="@Embed('/assets/icon_tiles.png')" />
           <mx:SetEventHandler target="{compareButton}" name="click" handler="dispatchFilter()" />
       </mx:State>
    </mx:states>


    <ProductFilter id="filter">
        <series>{series.selectedItem}</series>
        <minPrice>{sliderValue(priceSlider.values, 0)}</minPrice>
        <maxPrice>{sliderValue(priceSlider.values, 1)}</maxPrice>
        <triband>{cbTriband.selected}</triband>
        <camera>{cbCamera.selected}</camera>
        <video>{cbVideo.selected}</video>
    </ProductFilter>

    <mx:CurrencyFormatter currencySymbol="$" id="cf"/>    
    
    <mx:Label text="Find" styleName="sectionHeader"/>
    
    <mx:HBox width="100%">
        <mx:TextInput styleName="glass" width="100%"/>
        <mx:Button styleName="glass" label="Go" click="Alert.show('This feature is not implemented in this sample', 'Find')"/>
    </mx:HBox>

    <mx:Spacer height="18"/>

    <mx:HRule width="100%"/>

    <mx:Spacer height="8"/>

    <mx:HBox paddingTop="0" paddingLeft="0" verticalAlign="bottom">
        <mx:Label text="Filter" styleName="sectionHeader"/>
        <mx:Label text="({filter.count} items selected)" color="{getStyle('themeColor')}" fontWeight="bold"/>
    </mx:HBox>

    <mx:Spacer height="8"/>

    <mx:Label text="Series"/>

    <mx:ComboBox id="series" styleName="glass" width="140" change="dispatchFilter();">
        <mx:dataProvider>
            <mx:Array>
                <mx:String>All Series</mx:String>
                <mx:String>3000</mx:String>
                <mx:String>6000</mx:String>
                <mx:String>7000</mx:String>
                <mx:String>9000</mx:String>
            </mx:Array>
        </mx:dataProvider>
    </mx:ComboBox>

    <mx:Spacer height="18"/>

    <mx:Label text="Price"/>

    <mx:HSlider id="priceSlider" styleName="glassSlider" minimum="0" maximum="1100" tickInterval="50" snapInterval="10"
        width="100%" thumbCount="2" values="[0,1100]" labels="[$0,$1100]" liveDragging="true" dataTipFormatFunction="{cf.format}"
        change="dispatchFilter()"
        thumbPress="thumbBeingPressed=true"
        thumbRelease="thumbBeingPressed=false;dispatchFilter()"
        />

    <mx:Spacer height="18"/>

    <mx:Label text="Required Features"/>

    <mx:Spacer height="4"/>

    <mx:CheckBox id="cbTriband" styleName="glass" label="Tri-Band" click="dispatchFilter();"/>
    <mx:Spacer height="4"/>
    <mx:CheckBox id="cbCamera" styleName="glass" label="Camera" click="dispatchFilter()"/>
    <mx:Spacer height="4"/>
    <mx:CheckBox id="cbVideo" styleName="glass" label="Video" click="dispatchFilter();"/>

    <mx:Spacer height="18"/>

    <mx:HRule width="100%"/>

    <mx:Spacer height="8"/>

        <mx:HBox>
            <mx:Label text="Compare" styleName="sectionHeader"/>
            <mx:Label text="(Drag items here to compare)" styleName="instructions"/>
        </mx:HBox>


    <mx:Spacer height="4"/>

    <!-- height is maxItems * ProductListItem.HEIGHT + 2px border -->
    <cart:ProductList 	id="productList" 
				    	height="{productList.maxItems * ProductListItem.HEIGHT + 2}" width="100%"
				        newItemStartX="300" newItemStartY="-100" maxItems="4" 
				        products="{__compareCart.products}"
				        addProduct="onChangeCart(event)"
				        removeProduct="onChangeCart(event)"
				        xmlns:cart="com.flexstore.view.products.cart.*"/>

    <mx:Spacer height="8"/>
    
    <mx:Button id="compareButton" styleName="glass" />
    

</mx:VBox>